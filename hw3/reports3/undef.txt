TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*					TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...					___Entering new scope...

TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon						ID_EXPR_LIST -> epsilon
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: z					TOKEN: IDENT     LEXEME: z
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: INPUT     LEXEME: input					TOKEN: INPUT     LEXEME: input
INPUT_EXPR -> input						INPUT_EXPR -> input
PARENTHESIZED_EXPR -> INPUT_EXPR				PARENTHESIZED_EXPR -> INPUT_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding z to symbol table					___Adding z to symbol table
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: PRINT     LEXEME: print					TOKEN: PRINT     LEXEME: print
TOKEN: IDENT     LEXEME: z					TOKEN: IDENT     LEXEME: z
EXPR -> IDENT							EXPR -> IDENT
PRINT_EXPR -> print EXPR					PRINT_EXPR -> print EXPR
PARENTHESIZED_EXPR -> PRINT_EXPR				PARENTHESIZED_EXPR -> PRINT_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR				LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...						___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR					PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*					TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...					___Entering new scope...

TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon						ID_EXPR_LIST -> epsilon
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: x					TOKEN: IDENT     LEXEME: x
TOKEN: INTCONST  LEXEME: 0					TOKEN: INTCONST  LEXEME: 0
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding x to symbol table					___Adding x to symbol table
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: y					TOKEN: IDENT     LEXEME: y
TOKEN: INTCONST  LEXEME: 20					TOKEN: INTCONST  LEXEME: 20
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding y to symbol table					___Adding y to symbol table
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *					TOKEN: MULT      LEXEME: *
ARITH_OP -> *							ARITH_OP -> *
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: IDENT     LEXEME: x					TOKEN: IDENT     LEXEME: x
EXPR -> IDENT							EXPR -> IDENT
TOKEN: IDENT     LEXEME: z					TOKEN: IDENT     LEXEME: z
EXPR -> IDENT							EXPR -> IDENT
Line 9: Undefined identifier					Line 9: Undefined identifier
							      <
