TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +					TOKEN: ADD       LEXEME: +
ARITH_OP -> +							ARITH_OP -> +
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 1					TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not					TOKEN: NOT       LEXEME: not
UN_OP -> not							UN_OP -> not
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR					ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: AND       LEXEME: and					TOKEN: AND       LEXEME: and
LOG_OP -> and							LOG_OP -> and
BIN_OP -> LOG_OP						BIN_OP -> LOG_OP
TOKEN: INTCONST  LEXEME: 6					TOKEN: INTCONST  LEXEME: 6
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 7					TOKEN: INTCONST  LEXEME: 7
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: OR        LEXEME: or					TOKEN: OR        LEXEME: or
LOG_OP -> or							LOG_OP -> or
BIN_OP -> LOG_OP						BIN_OP -> LOG_OP
TOKEN: IDENT     LEXEME: five					TOKEN: IDENT     LEXEME: five
EXPR -> IDENT							EXPR -> IDENT
TOKEN: IDENT     LEXEME: nine					TOKEN: IDENT     LEXEME: nine
EXPR -> IDENT							EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: SUB       LEXEME: -					TOKEN: SUB       LEXEME: -
ARITH_OP -> -							ARITH_OP -> -
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 1					TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: DIV       LEXEME: /					TOKEN: DIV       LEXEME: /
ARITH_OP -> /							ARITH_OP -> /
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 8					TOKEN: INTCONST  LEXEME: 8
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *					TOKEN: MULT      LEXEME: *
ARITH_OP -> *							ARITH_OP -> *
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 1					TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 0					TOKEN: INTCONST  LEXEME: 0
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN  LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +					TOKEN: ADD       LEXEME: +
ARITH_OP -> +							ARITH_OP -> +
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 5					TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4					TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LT        LEXEME: <					TOKEN: LT        LEXEME: <
EXPR_LIST -> EXPR						EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST					EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST					PARENTHESIZED_EXPR -> EXPR_LIST
Line 8: syntax error						Line 8: syntax error
