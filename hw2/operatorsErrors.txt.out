TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +
ARITH_OP -> +
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: NOT       LEXEME: not
UN_OP -> not
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> UN_OP EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: AND       LEXEME: and
LOG_OP -> and
BIN_OP -> LOG_OP
TOKEN: INTCONST  LEXEME: 6
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 7
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: OR        LEXEME: or
LOG_OP -> or
BIN_OP -> LOG_OP
TOKEN: IDENT     LEXEME: five
EXPR -> IDENT
TOKEN: IDENT     LEXEME: nine
EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: SUB       LEXEME: -
ARITH_OP -> -
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: DIV       LEXEME: /
ARITH_OP -> /
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 8
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *
ARITH_OP -> *
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 1
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 0
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +
ARITH_OP -> +
BIN_OP -> ARITH_OP
TOKEN: INTCONST  LEXEME: 5
CONST -> INTCONST
EXPR -> CONST
TOKEN: INTCONST  LEXEME: 4
CONST -> INTCONST
EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LT        LEXEME: <
EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
Line 8: syntax error
